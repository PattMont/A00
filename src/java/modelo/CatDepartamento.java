package modelo;
// Generated 25/04/2013 10:50:31 PM by Hibernate Tools 3.2.1.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * CatDepartamento generated by hbm2java
 */
@Entity
@Table(name="cat_departamento"
    ,catalog="dbakihabara"
)
public class CatDepartamento  implements java.io.Serializable {


     private String departamento;
     private String descripcion;
     private Set<Departamento> departamentos = new HashSet<Departamento>(0);
     private Set<Departamento> departamentos_1 = new HashSet<Departamento>(0);

    public CatDepartamento() {
    }

	
    public CatDepartamento(String departamento) {
        this.departamento = departamento;
    }
    public CatDepartamento(String departamento, String descripcion, Set<Departamento> departamentos, Set<Departamento> departamentos_1) {
       this.departamento = departamento;
       this.descripcion = descripcion;
       this.departamentos = departamentos;
       this.departamentos_1 = departamentos_1;
    }
   
     @Id 
    
    @Column(name="departamento", unique=true, nullable=false, length=45)
    public String getDepartamento() {
        return this.departamento;
    }
    
    public void setDepartamento(String departamento) {
        this.departamento = departamento;
    }
    
    @Column(name="descripcion", length=45)
    public String getDescripcion() {
        return this.descripcion;
    }
    
    public void setDescripcion(String descripcion) {
        this.descripcion = descripcion;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="catDepartamento")
    public Set<Departamento> getDepartamentos() {
        return this.departamentos;
    }
    
    public void setDepartamentos(Set<Departamento> departamentos) {
        this.departamentos = departamentos;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="catDepartamento")
    public Set<Departamento> getDepartamentos_1() {
        return this.departamentos_1;
    }
    
    public void setDepartamentos_1(Set<Departamento> departamentos_1) {
        this.departamentos_1 = departamentos_1;
    }




}


