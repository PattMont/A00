package modelo;
// Generated 25/04/2013 10:50:31 PM by Hibernate Tools 3.2.1.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Game generated by hbm2java
 */
@Entity
@Table(name="game"
    ,catalog="dbakihabara"
)
public class Game  implements java.io.Serializable {


     private Integer idgame;
     private CatEstado catEstado;
     private String tituloGame;
     private String urlCarpeta;
     private String urlImg;
     private String resenia;
     private int cantidad;
     private String precioBase;
     private Set<DetalleCompra> detalleCompras = new HashSet<DetalleCompra>(0);
     private Set<DetalleCompra> detalleCompras_1 = new HashSet<DetalleCompra>(0);
     private Set<CatPlataforma> catPlataformas = new HashSet<CatPlataforma>(0);
     private Set<Game> gamesForIdgameR1 = new HashSet<Game>(0);
     private Set<Game> gamesForIdgameR2 = new HashSet<Game>(0);
     private Set<DetalleVenta> detalleVentas = new HashSet<DetalleVenta>(0);
     private Set<CatCategoria> catCategorias = new HashSet<CatCategoria>(0);
     private Set<Estudio> estudios = new HashSet<Estudio>(0);
     private Set<CatClasificacion> catClasificacions = new HashSet<CatClasificacion>(0);
     private Set<DetalleVenta> detalleVentas_1 = new HashSet<DetalleVenta>(0);

    public Game() {
    }

	
    public Game(String tituloGame, int cantidad) {
        this.tituloGame = tituloGame;
        this.cantidad = cantidad;
    }
    public Game(CatEstado catEstado, String tituloGame, String urlCarpeta, String urlImg, String resenia, int cantidad, String precioBase, Set<DetalleCompra> detalleCompras, Set<DetalleCompra> detalleCompras_1, Set<CatPlataforma> catPlataformas, Set<Game> gamesForIdgameR1, Set<Game> gamesForIdgameR2, Set<DetalleVenta> detalleVentas, Set<CatCategoria> catCategorias, Set<Estudio> estudios, Set<CatClasificacion> catClasificacions, Set<DetalleVenta> detalleVentas_1) {
       this.catEstado = catEstado;
       this.tituloGame = tituloGame;
       this.urlCarpeta = urlCarpeta;
       this.urlImg = urlImg;
       this.resenia = resenia;
       this.cantidad = cantidad;
       this.precioBase = precioBase;
       this.detalleCompras = detalleCompras;
       this.detalleCompras_1 = detalleCompras_1;
       this.catPlataformas = catPlataformas;
       this.gamesForIdgameR1 = gamesForIdgameR1;
       this.gamesForIdgameR2 = gamesForIdgameR2;
       this.detalleVentas = detalleVentas;
       this.catCategorias = catCategorias;
       this.estudios = estudios;
       this.catClasificacions = catClasificacions;
       this.detalleVentas_1 = detalleVentas_1;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="idgame", unique=true, nullable=false)
    public Integer getIdgame() {
        return this.idgame;
    }
    
    public void setIdgame(Integer idgame) {
        this.idgame = idgame;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="estado")
    public CatEstado getCatEstado() {
        return this.catEstado;
    }
    
    public void setCatEstado(CatEstado catEstado) {
        this.catEstado = catEstado;
    }
    
    @Column(name="tituloGame", nullable=false, length=60)
    public String getTituloGame() {
        return this.tituloGame;
    }
    
    public void setTituloGame(String tituloGame) {
        this.tituloGame = tituloGame;
    }
    
    @Column(name="urlCarpeta", length=300)
    public String getUrlCarpeta() {
        return this.urlCarpeta;
    }
    
    public void setUrlCarpeta(String urlCarpeta) {
        this.urlCarpeta = urlCarpeta;
    }
    
    @Column(name="urlIMG", length=300)
    public String getUrlImg() {
        return this.urlImg;
    }
    
    public void setUrlImg(String urlImg) {
        this.urlImg = urlImg;
    }
    
    @Column(name="resenia")
    public String getResenia() {
        return this.resenia;
    }
    
    public void setResenia(String resenia) {
        this.resenia = resenia;
    }
    
    @Column(name="cantidad", nullable=false)
    public int getCantidad() {
        return this.cantidad;
    }
    
    public void setCantidad(int cantidad) {
        this.cantidad = cantidad;
    }
    
    @Column(name="precioBase", length=45)
    public String getPrecioBase() {
        return this.precioBase;
    }
    
    public void setPrecioBase(String precioBase) {
        this.precioBase = precioBase;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="game")
    public Set<DetalleCompra> getDetalleCompras() {
        return this.detalleCompras;
    }
    
    public void setDetalleCompras(Set<DetalleCompra> detalleCompras) {
        this.detalleCompras = detalleCompras;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="game")
    public Set<DetalleCompra> getDetalleCompras_1() {
        return this.detalleCompras_1;
    }
    
    public void setDetalleCompras_1(Set<DetalleCompra> detalleCompras_1) {
        this.detalleCompras_1 = detalleCompras_1;
    }
@ManyToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY)
    @JoinTable(name="gameplataforma", catalog="dbakihabara", joinColumns = { 
        @JoinColumn(name="idgameR", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="plataforma", nullable=false, updatable=false) })
    public Set<CatPlataforma> getCatPlataformas() {
        return this.catPlataformas;
    }
    
    public void setCatPlataformas(Set<CatPlataforma> catPlataformas) {
        this.catPlataformas = catPlataformas;
    }
@ManyToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY)
    @JoinTable(name="gamegame", catalog="dbakihabara", joinColumns = { 
        @JoinColumn(name="idgameR2", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="idgameR1", nullable=false, updatable=false) })
    public Set<Game> getGamesForIdgameR1() {
        return this.gamesForIdgameR1;
    }
    
    public void setGamesForIdgameR1(Set<Game> gamesForIdgameR1) {
        this.gamesForIdgameR1 = gamesForIdgameR1;
    }
@ManyToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY)
    @JoinTable(name="gamegame", catalog="dbakihabara", joinColumns = { 
        @JoinColumn(name="idgameR1", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="idgameR2", nullable=false, updatable=false) })
    public Set<Game> getGamesForIdgameR2() {
        return this.gamesForIdgameR2;
    }
    
    public void setGamesForIdgameR2(Set<Game> gamesForIdgameR2) {
        this.gamesForIdgameR2 = gamesForIdgameR2;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="game")
    public Set<DetalleVenta> getDetalleVentas() {
        return this.detalleVentas;
    }
    
    public void setDetalleVentas(Set<DetalleVenta> detalleVentas) {
        this.detalleVentas = detalleVentas;
    }
@ManyToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY)
    @JoinTable(name="gamecategoria", catalog="dbakihabara", joinColumns = { 
        @JoinColumn(name="idgameR", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="idCategoria", nullable=false, updatable=false) })
    public Set<CatCategoria> getCatCategorias() {
        return this.catCategorias;
    }
    
    public void setCatCategorias(Set<CatCategoria> catCategorias) {
        this.catCategorias = catCategorias;
    }
@ManyToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY)
    @JoinTable(name="gameestudio", catalog="dbakihabara", joinColumns = { 
        @JoinColumn(name="idgameR", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="idestudioR", nullable=false, updatable=false) })
    public Set<Estudio> getEstudios() {
        return this.estudios;
    }
    
    public void setEstudios(Set<Estudio> estudios) {
        this.estudios = estudios;
    }
@ManyToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY)
    @JoinTable(name="gameclasificacione", catalog="dbakihabara", joinColumns = { 
        @JoinColumn(name="idGame", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="idClasificacion", nullable=false, updatable=false) })
    public Set<CatClasificacion> getCatClasificacions() {
        return this.catClasificacions;
    }
    
    public void setCatClasificacions(Set<CatClasificacion> catClasificacions) {
        this.catClasificacions = catClasificacions;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="game")
    public Set<DetalleVenta> getDetalleVentas_1() {
        return this.detalleVentas_1;
    }
    
    public void setDetalleVentas_1(Set<DetalleVenta> detalleVentas_1) {
        this.detalleVentas_1 = detalleVentas_1;
    }




}


